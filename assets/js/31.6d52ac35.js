(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{414:function(t,a,s){"use strict";s.r(a);var e=s(48),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"regex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regex"}},[t._v("#")]),t._v(" Regex")]),t._v(" "),s("p",[t._v("The "),s("RouterLink",{attrs:{to:"/reference/Chevere/Components/Regex/Regex.html"}},[t._v("Regex")]),t._v(" component is in charge of providing tooling for regex patterns.")],1),t._v(" "),s("h2",{attrs:{id:"creating-regex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-regex"}},[t._v("#")]),t._v(" Creating Regex")]),t._v(" "),s("p",[t._v("Create a new Regex by passing the pattern.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Chevere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Components"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Regex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Regex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token argument-name"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/^Hello World!$/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"accessing-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#accessing-pattern"}},[t._v("#")]),t._v(" Accessing Pattern")]),t._v(" "),s("h3",{attrs:{id:"as-is-constructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-is-constructor"}},[t._v("#")]),t._v(" As-is (constructor)")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("toString")]),t._v(" method is used to access the pattern passed on instance creation.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /^Hello World!$/")]),t._v("\n")])])]),s("h3",{attrs:{id:"without-delimiters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#without-delimiters"}},[t._v("#")]),t._v(" Without delimiters")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("toNoDelimiters")]),t._v(" method is used to access to the regex pattern without delimiters.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toNoDelimiters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ^Hello World!$")]),t._v("\n")])])]),s("h3",{attrs:{id:"without-delimiters-and-anchors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#without-delimiters-and-anchors"}},[t._v("#")]),t._v(" Without delimiters and anchors")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("toNoDelimitersNoAnchors")]),t._v(" method is used to access to the regex pattern without delimiters and anchors.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toNoDelimitersNoAnchors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello World!")]),t._v("\n")])])]),s("h2",{attrs:{id:"string-matching"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-matching"}},[t._v("#")]),t._v(" String matching")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("match")]),t._v(" method provides "),s("a",{attrs:{href:"https://www.php.net/preg-match",target:"_blank",rel:"noopener noreferrer"}},[t._v("preg_match"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Hello World!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Hello World!]")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("matchAll")]),t._v(" method provides "),s("a",{attrs:{href:"https://www.php.net/preg-match-all",target:"_blank",rel:"noopener noreferrer"}},[t._v("preg_match_all"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello World!")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);